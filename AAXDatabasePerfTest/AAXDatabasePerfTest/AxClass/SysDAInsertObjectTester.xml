<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysDAInsertObjectTester</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class SysDAInsertObjectTester extends DatabaseInsertTester
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SysDAInsertObjectTester SysDAInsertObjectTester = new SysDAInsertObjectTester();

        SysDAInsertObjectTester.runCodeTable();
        SysDAInsertObjectTester.runCodeDataEntity();


    }

]]></Source>
			</Method>
			<Method>
				<Name>runCodeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Test for table SalesPool
    /// </summary>
    public void runCodeTable(int _recordCount = 0)
    {
        //setup
        this.parmRecordCount(_recordCount == 0 ? SingleInsertTester::codeTableLoopCount : _recordCount);
        SalesPool SalesPool;

        this.wipeCodeTable();
        this.filltmpCodeTable();

        //tmpSalesPool
        // based on SysDaInsertObject

        var insertObject = new SysDaInsertObject(SalesPool);
        insertObject.fields()
            .add(fieldStr(SalesPool, SalesPoolId))
            .add(fieldStr(SalesPool, Name));

        tmpSalesPool source;
        var qe = new SysDaQueryObject(source);

        var s1 = qe.projection()
            .Add(fieldStr(tmpSalesPool, SalesPoolId))
            .Add(fieldStr(tmpSalesPool, Name));

        insertObject.query(qe);

        var insertStmt = new SysDaInsertStatement();
        this.startTimer();
        ttsbegin;
        insertStmt.executeQuery(insertObject);
        ttscommit;

        this.stopTimer();

        this.writeRunHistory(DatabaseInsertTestType, DatabaseInsertWorkloadType::CodeTable);

        select count(RecId) from SalesPool;

        info(strFmt("%1 records created in %2", SalesPool.RecId, funcName()));

    }

]]></Source>
			</Method>
			<Method>
				<Name>runCodeDataEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Test for data entity SalesOrderPoolEntity
    /// </summary>
    public void runCodeDataEntity(int _recordCount = 0)
    {
        //setup
        this.parmRecordCount(_recordCount == 0 ? SingleInsertTester::codeTableLoopCount : _recordCount);
        SalesOrderPoolEntity SalesOrderPoolEntity;

        this.wipeCodeTable();
        this.filltmpCodeTable();

        //tmpSalesPool
        // based on SysDaInsertObject

        var insertObject = new SysDaInsertObject(SalesOrderPoolEntity);
        insertObject.fields()
            .add(fieldStr(SalesOrderPoolEntity, PoolId))
            .add(fieldStr(SalesOrderPoolEntity, PoolName));

        tmpSalesPool source;
        var qe = new SysDaQueryObject(source);

        var s1 = qe.projection()
            .Add(fieldStr(tmpSalesPool, SalesPoolId))
            .Add(fieldStr(tmpSalesPool, Name));

        insertObject.query(qe);

        var insertStmt = new SysDaInsertStatement();
        this.startTimer();
        ttsbegin;
        insertStmt.executeQuery(insertObject);
        ttscommit;

        this.stopTimer();

        this.writeRunHistory(DatabaseInsertTestType, DatabaseInsertWorkloadType::CodeDataEntity);

        select count(RecId) from SalesOrderPoolEntity;

        info(strFmt("%1 records created in %2", SalesOrderPoolEntity.RecId, funcName()));

    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        DatabaseInsertTestType = DatabaseInsertTestType::SysDAInsertObject;
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>